version: "3"
services:
  mongo:
    image: mongo:3.6-jessie
    container_name: mongo
    # don't set the hostname as another container started via `docker-compose run`
    # will cause `ping mongo` to resolve to the current hostname instead of the
    # original container serving mongo.
    # hostname: mongo
    networks:
      - openbanking_network
    ports:
      - 27017:27017

  reference-mock-server:
    image: openbankinguk/reference-mock-server
    container_name: reference-mock-server
    hostname: reference-mock-server
    networks:
      - openbanking_network
    ports:
      - 8001:8001
    environment:
      - ACCESS_TOKEN=2YotnFZFEjr1zCsicMWpAA
      - ACCOUNT_SWAGGER=https://raw.githubusercontent.com/OpenBankingUK/account-info-api-spec/ee715e094a59b37aeec46aef278f528f5d89eb03/dist/v1.1/account-info-swagger.json
      - AUTHORISATION_CODE=spoofAuthorisationCode
      - BANK_DATA_DIRECTORY=abcbank
      - CLIENT_ID=spoofClientId
      - CLIENT_SECRET=spoofClientSecret
      - DEBUG=error,log
      - HOST=http://${REFERENCE_HOST:-reference-mock-server}:8001
      - HEADLESS_CONSENT=true
      - OPENID_ASPSP_AUTH_HOST=http://${ASPSP_AUTH_HOST_IP:-reference-mock-server}:8001
      - OPENID_ASPSP_TOKEN_HOST=http://${REFERENCE_HOST:-reference-mock-server}:8001
      - OPENID_CONFIG_ENDPOINT_URL=http://${REFERENCE_HOST:-reference-mock-server}:8001/openid/config
      - PAYMENT_SWAGGER=https://raw.githubusercontent.com/OpenBankingUK/payment-initiation-api-spec/96307a92e70e209e51710fab54164f6e8d2e61cf/dist/v1.1/payment-initiation-swagger.json
      - PORT=8001
      - USER_DATA_DIRECTORY=alice
      - VERSION=v1.1
    command: /bin/bash -c 'rm -fr .env && DEBUG=debug,log,error npm run foreman'

  ob-api-proxy:
    build: ./services/ob-api-proxy
    image: eu.gcr.io/compliance-suite-server/ob-api-proxy:${COMPOSE_BUILD_TAG:-latest}
    container_name: ob-api-proxy
    hostname: ob-api-proxy
    networks:
      - openbanking_network
    depends_on:
      - mongo
    ports:
      - 8003:8003
    environment:
      - DEBUG=error,log,debug
      - MONGODB_URI=mongodb://mongo:27017/${DATA_DB_NAME}
      - TPP_REF_SERVER_PORT=8003
      - VALIDATE_RESPONSE=true
      - LOG_LEVEL=debug
      - DEBUG_HIDE_DATE=0
      - DEBUG_COLORS=1
      - FORCE_COLORS=1
    # volumes:
    #   - ${BITBUCKET_CLONE_DIR}/.cache/ob-api-proxy/.cache:/root/.cache
    #   - ${BITBUCKET_CLONE_DIR}/.cache/ob-api-proxy/.npm:/root/.npm

  compliance-suite-server:
    build:
      context: .
      args:
        ENVFILE: ${ENVFILE:-.env}
        ENV: $ENV
        DEBUG_ENVS: ${DEBUG_ENVS:-false}
    image: eu.gcr.io/compliance-suite-server/compliance-suite-server:${COMPOSE_BUILD_TAG:-latest}
    env_file: ${ENVFILE:-.env}
    container_name: compliance-suite-server
    hostname: compliance-suite-server
    networks:
      - openbanking_network
    depends_on:
      - ob-api-proxy
      - mongo
    ports:
      - 4000:4000
    # volumes:
      # - ${BITBUCKET_CLONE_DIR}/.cache/compliance-suite-server/.cache:/root/.cache
      # - ${BITBUCKET_CLONE_DIR}/.cache/compliance-suite-server/.npm:/root/.npm
      # - ${BITBUCKET_CLONE_DIR}/deps:/build/deps
      # - ${BITBUCKET_CLONE_DIR}/_build:/build/_build

  e2e:
    image: cypress/base:8
    container_name: e2e
    hostname: e2e
    networks:
      - openbanking_network
    volumes:
      - ${BITBUCKET_CLONE_DIR:-.}/e2e:/root/e2e
      - ${BITBUCKET_CLONE_DIR:-.}/.cache/cypress/.cache:/root/.cache
      - ${BITBUCKET_CLONE_DIR:-.}/.cache/cypress/.npm:/root/.npm
    command:
      - /bin/bash
      - -cx
      - |
        whoami
        pwd
        ls -lah /root
        ls -lah /root/e2e
        cd /root/e2e
        CI=true npm install
        npm run cypress -- verify
        EXIT_CODE=$$?
        if [[ $$EXIT_CODE -ne 0 ]]; then
          CI=true npm run cypress -- install --force
        fi
        npm run headless

networks:
  openbanking_network:
