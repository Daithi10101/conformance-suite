version: 2
jobs:
  ob-api-proxy:
    working_directory: ~/compliance-suite-server/services/ob-api-proxy
    docker:
      - image: circleci/node:8.11.1
      - image: mongo:3.6-jessie
      - image: redis:4.0.2
    steps:
      - checkout:
          path: ~/compliance-suite-server
      - restore_cache:
          keys:
            - v7-ob-api-proxy-deps-{{ .Branch }}-{{ checksum "package-lock.json" }}
            - v7-ob-api-proxy-deps-{{ .Branch }}-
            - v7-ob-api-proxy-deps-
      - run: npm i
      - save_cache:
          key: v7-ob-api-proxy-deps-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm
            - ~/.cache
      - run:
          name: "Run eslint checks"
          command: npm run eslint
      - run:
          name: "Run unit tests"
          command: npm test
          environment:
            VALIDATION_KAFKA_TOPIC: ""
            VALIDATION_KAFKA_BROKER: ""

  ui:
    working_directory: ~/compliance-suite-server/apps/compliance_web/assets
    docker:
      - image: circleci/node:8.11.1
    steps:
      - checkout:
          path: ~/compliance-suite-server
      - restore_cache:
          keys:
            - v7-ui-deps-{{ .Branch }}-{{ checksum "package-lock.json" }}
            - v7-ui-deps-{{ .Branch }}-
            - v7-ui-deps-
      - run: npm i
      - save_cache:
          key: v7-ui-deps-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm
            - ~/.cache
      - run:
          name: "Run eslint checks"
          command: npm run eslint
      - run:
          name: "Run unit tests"
          # https://circleci.com/docs/2.0/collect-test-data/#jest
          command: npm t -- --coverage --runInBand --ci

  elixir:
    docker:
      - image: circleci/elixir:1.7.3
        environment:
          MIX_ENV: test
      - image: mongo:3.6-jessie
    working_directory: ~/compliance-suite-server
    steps:
      - checkout
      - run: mix local.hex --force
      - run: mix local.rebar --force
      - restore_cache:  # restores saved mix cache
          keys:  # list of cache keys, in decreasing specificity
            - v7-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
            - v7-mix-cache-{{ .Branch }}-
            - v7-mix-cache-
      - restore_cache:  # restores saved build cache
          keys:
            - v7-build-cache-{{ .Branch }}-
            - v7-build-cache-
      - run: mix do deps.get, compile
      - save_cache:  # generate and store mix cache
          key: v7-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
          paths: "deps"
      - save_cache:  # make another, less specific cache
          key: v7-mix-cache-{{ .Branch }}
          paths: "deps"
      - save_cache:  # you should really save one more cache (just in case)
          key: v7-mix-cache
          paths: "deps"
      - save_cache: # don't forget to save a *build* cache, too
          key: v7-build-cache-{{ .Branch }}
          paths: "_build"
      - save_cache: # and one more build cache for good measure
          key: v7-build-cache
          paths: "_build"
      - run: mix test --trace --color

  e2e:
    machine:
      enabled: true
      docker_layer_caching: true
    environment:
      ENV: circleci
      ENVFILE: .env.circleci
      OB_API_PROXY_URL: http://ob-api-proxy:8003
      DATA_DB_HOST: mongo
      DATA_DB_NAME: compliance_dev
      ENDPOINT_URL_HOST: compliance-suite-server
      ENDPOINT_URL_PORT: 4000
      GOOGLE_OAUTH_TOKENINFO_URL: http://localhost:4000/tokeninfo?id_token=
    working_directory: ~/compliance-suite-server
    steps:
      - checkout
      - restore_cache:
          keys:
            - v7-ui-deps-{{ .Branch }}-{{ checksum "apps/compliance_web/assets/package-lock.json" }}
            - v7-ui-deps-{{ .Branch }}-
            - v7-ui-deps-
      - restore_cache:
          keys:
            - v7-ob-api-proxy-deps-{{ .Branch }}-{{ checksum "services/ob-api-proxy/package-lock.json" }}
            - v7-ob-api-proxy-deps-{{ .Branch }}-
            - v7-ob-api-proxy-deps-
      - restore_cache:
          keys:
            - v7-e2e-deps-{{ .Branch }}-{{ checksum "e2e/package-lock.json" }}
            - v7-e2e-deps-{{ .Branch }}-
            - v7-e2e-deps-
      - restore_cache:  # restores saved mix cache
          keys:  # list of cache keys, in decreasing specificity
            - v7-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
            - v7-mix-cache-{{ .Branch }}-
            - v7-mix-cache-
      - restore_cache:  # restores saved build cache
          keys:
            - v7-build-cache-{{ .Branch }}-
            - v7-build-cache-
      - run:
          name: Start services
          command: |
            ./scripts/create-envs

            if [[ "$(docker images -q openbankinguk/reference-mock-server:latest 2> /dev/null)" == "" ]]; then
              cd ../ && \
              git clone https://github.com/OpenBankingUK/reference-mock-server.git && \
              cd reference-mock-server && \
              docker-compose build
              cd ../compliance-suite-server
            fi

            docker-compose up -d --build \
              kafka \
              mongo \
              redis \
              reference-mock-server \
              ob-api-proxy

            while ! nc -z localhost 9092; do
              echo -e "\033[92m  ---> waiting for kafka ... \033[0m"
              sleep 1
            done

            docker-compose up -d --build compliance-suite-server
      - save_cache:  # generate and store mix cache
          key: v7-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
          paths: "deps"
      - save_cache:  # make another, less specific cache
          key: v7-mix-cache-{{ .Branch }}
          paths: "deps"
      - save_cache:  # you should really save one more cache (just in case)
          key: v7-mix-cache
          paths: "deps"
      - save_cache: # don't forget to save a *build* cache, too
          key: v7-build-cache-{{ .Branch }}
          paths: "_build"
      - save_cache: # and one more build cache for good measure
          key: v7-build-cache
          paths: "_build"
      - run:
          name: E2E tests
          command: |
            NETWORK=`docker network ls --filter name=compliance --format "{{.Name}}"`
            # Run tests in cypress
            docker run \
              --network="${NETWORK}" \
              --rm \
              --volume `pwd`/e2e:/e2e \
              --volume ~/.cache:/root/.cache \
              --volume ~/.npm:/root/.npm \
              cypress/base:8 \
              /bin/bash -c 'cd /e2e && npm install && npm run headless'
      - save_cache:
          key: v7-e2e-deps-{{ .Branch }}-{{ checksum "e2e/package-lock.json" }}
          paths:
            - ~/.npm
            - ~/.cache
      - store_artifacts:
          path: ./e2e/artifacts
      - run:
          name: reference-mock-server logs
          when: on_fail
          command: docker-compose logs reference-mock-server
      - run:
          name: ob-api-proxy logs
          when: on_fail
          command: docker-compose logs ob-api-proxy
      - run:
          name: compliance-suite-server logs
          when: on_fail
          command: docker-compose logs compliance-suite-server
      - run:
          name: zookeeper logs
          when: on_fail
          command: docker-compose logs zookeeper
      - run:
          name: kafka logs
          when: on_fail
          command: docker-compose logs kafka

  push-images:
    machine:
      enabled: true
      docker_layer_caching: true
    environment:
      ENV: circleci
      OB_API_PROXY_URL: http://ob-api-proxy:8003
      DATA_DB_HOST: mongo
      ENDPOINT_URL_HOST: compliance-suite-server
      ENDPOINT_URL_PORT: 4000
    working_directory: ~/compliance-suite-server
    steps:
      - checkout
      - restore_cache:
          keys:
            - v7-ui-deps-{{ .Branch }}-{{ checksum "apps/compliance_web/assets/package-lock.json" }}
            - v7-ui-deps-{{ .Branch }}-
            - v7-ui-deps-
      - restore_cache:
          keys:
            - v7-ob-api-proxy-deps-{{ .Branch }}-{{ checksum "services/ob-api-proxy/package-lock.json" }}
            - v7-ob-api-proxy-deps-{{ .Branch }}-
            - v7-ob-api-proxy-deps-
      - restore_cache:  # restores saved mix cache
          keys:  # list of cache keys, in decreasing specificity
            - v7-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
            - v7-mix-cache-{{ .Branch }}-
            - v7-mix-cache-
      - restore_cache:  # restores saved build cache
          keys:
            - v7-build-cache-{{ .Branch }}-
            - v7-build-cache-
      - run:
          name: building for production
          environment:
            ENDPOINT_URL_HOST: compliance-suite-server.ga
            ENDPOINT_URL_PORT: 4000
            ENV: production
          no_output_timeout: 5m
          command: make build_images_compliance
      - run:
          name: tagging images
          command: make images_tag
      - run:
          name: deploy details before
          command: make deploy_details
      - run:
          name: deploy pushing images
          command: make deploy_images_push
      - run:
          name: deploy updating images
          command: make deploy_images_update
      - run:
          name: deploy details after
          when: always
          command: make deploy_details

workflows:
  version: 2
  test-deploy:
    jobs:
      - e2e
      - ob-api-proxy
      - elixir
      - ui
      - push-images:
          filters:
            branches:
              only: master
          requires:
            - ob-api-proxy
            - elixir
            - ui
            - e2e
